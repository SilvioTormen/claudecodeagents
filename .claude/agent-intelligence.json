{
  "version": "1.0",
  "agents": {
    "@context-manager": {
      "role": "coordinator",
      "priority": 1,
      "capabilities": [
        "project_coordination",
        "team_management",
        "context_persistence",
        "task_delegation"
      ],
      "triggers": {
        "keywords": ["projekt", "koordiniere", "manage", "status", "team", "überblick", "fortschritt"],
        "patterns": ["mehrere aufgaben", "komplexes projekt", "verschiedene komponenten"],
        "complexity_threshold": 3
      },
      "dependencies": [],
      "can_delegate_to": ["all"]
    },
    "@solution-architect": {
      "role": "designer",
      "priority": 2,
      "capabilities": [
        "system_design",
        "architecture_decisions",
        "technology_selection",
        "scalability_planning"
      ],
      "triggers": {
        "keywords": ["architektur", "design", "struktur", "system", "skalierung", "pattern", "microservice"],
        "patterns": ["neue anwendung", "system entwerfen", "technologie auswahl", "refactoring"],
        "complexity_indicators": ["mehrere services", "verteiltes system", "große anwendung"]
      },
      "dependencies": [],
      "typical_outputs": ["architecture.md", "system-design.md", "tech-stack.md"]
    },
    "@backend-developer": {
      "role": "implementer",
      "priority": 3,
      "capabilities": [
        "api_development",
        "database_design",
        "business_logic",
        "server_implementation"
      ],
      "triggers": {
        "keywords": ["api", "backend", "server", "datenbank", "endpoint", "rest", "graphql", "crud", "business logic"],
        "patterns": ["daten speichern", "server logik", "api erstellen", "datenbank anbindung"],
        "file_patterns": ["*.js", "*.py", "*.java", "*.go", "controllers/*", "models/*", "services/*"]
      },
      "dependencies": ["@solution-architect"],
      "works_with": ["@frontend-developer", "@security-engineer"]
    },
    "@frontend-developer": {
      "role": "implementer",
      "priority": 3,
      "capabilities": [
        "ui_development",
        "user_experience",
        "responsive_design",
        "state_management"
      ],
      "triggers": {
        "keywords": ["frontend", "ui", "ux", "interface", "react", "vue", "angular", "component", "css", "html", "design", "formular", "button", "seite"],
        "patterns": ["benutzeroberfläche", "webseite", "user interface", "responsive", "mobile ansicht"],
        "file_patterns": ["*.jsx", "*.tsx", "*.vue", "*.css", "*.scss", "components/*", "pages/*", "views/*"]
      },
      "dependencies": ["@solution-architect"],
      "works_with": ["@backend-developer", "@ux-designer"]
    },
    "@devops-engineer": {
      "role": "operations",
      "priority": 4,
      "capabilities": [
        "deployment",
        "ci_cd",
        "containerization",
        "infrastructure",
        "monitoring"
      ],
      "triggers": {
        "keywords": ["deploy", "docker", "kubernetes", "aws", "azure", "pipeline", "ci/cd", "monitoring", "logs", "container"],
        "patterns": ["in produktion", "ausrollen", "deployment", "infrastructure", "automatisierung"],
        "file_patterns": ["Dockerfile", "docker-compose.yml", ".gitlab-ci.yml", ".github/workflows/*", "k8s/*"]
      },
      "dependencies": ["@backend-developer", "@frontend-developer"],
      "typical_outputs": ["deployment scripts", "CI/CD pipelines", "infrastructure code"]
    },
    "@security-engineer": {
      "role": "guardian",
      "priority": 2,
      "capabilities": [
        "security_assessment",
        "authentication",
        "authorization",
        "encryption",
        "compliance"
      ],
      "triggers": {
        "keywords": ["security", "sicherheit", "auth", "authentication", "login", "passwort", "verschlüsselung", "token", "oauth", "jwt", "rbac"],
        "patterns": ["benutzer anmeldung", "zugriffsrechte", "datenschutz", "sichere verbindung"],
        "mandatory_for": ["payment", "user_data", "sensitive_information"]
      },
      "dependencies": [],
      "works_with": ["@backend-developer", "@frontend-developer"]
    },
    "@quality-engineer": {
      "role": "validator",
      "priority": 5,
      "capabilities": [
        "test_automation",
        "quality_assurance",
        "performance_testing",
        "code_review"
      ],
      "triggers": {
        "keywords": ["test", "quality", "qa", "bug", "performance", "coverage", "unit", "integration", "e2e"],
        "patterns": ["teste", "qualität sichern", "fehler finden", "code review"],
        "automatic_triggers": ["after_implementation", "before_deployment"]
      },
      "dependencies": ["@backend-developer", "@frontend-developer"],
      "typical_outputs": ["test files", "test reports", "coverage reports"]
    },
    "@documentation-manager": {
      "role": "documenter",
      "priority": 6,
      "capabilities": [
        "technical_documentation",
        "api_documentation",
        "user_guides",
        "readme_creation"
      ],
      "triggers": {
        "keywords": ["dokumentation", "documentation", "readme", "docs", "anleitung", "guide", "tutorial", "beschreibung"],
        "patterns": ["dokumentiere", "erkläre", "beschreibe", "anleitung erstellen"],
        "automatic_triggers": ["after_major_implementation", "api_created", "new_feature"]
      },
      "dependencies": ["all_implementation_complete"],
      "typical_outputs": ["README.md", "API.md", "user-guide.md"]
    }
  },
  "orchestration_rules": {
    "default_flow": [
      "@context-manager",
      "@solution-architect",
      ["@backend-developer", "@frontend-developer"],
      "@security-engineer",
      "@quality-engineer",
      "@documentation-manager"
    ],
    "parallel_execution": {
      "enabled": true,
      "max_parallel": 3,
      "parallel_groups": [
        ["@backend-developer", "@frontend-developer"],
        ["@quality-engineer", "@documentation-manager"]
      ]
    },
    "complexity_analysis": {
      "simple": {
        "threshold": 1,
        "agents": ["single_specialist"]
      },
      "medium": {
        "threshold": 3,
        "agents": ["@context-manager", "specialists"]
      },
      "complex": {
        "threshold": 5,
        "agents": ["full_team"]
      }
    },
    "task_patterns": {
      "crud_application": ["@solution-architect", "@backend-developer", "@frontend-developer", "@security-engineer"],
      "api_only": ["@backend-developer", "@security-engineer", "@documentation-manager"],
      "static_website": ["@frontend-developer", "@devops-engineer"],
      "bug_fix": ["@quality-engineer", "relevant_developer"],
      "performance_optimization": ["@quality-engineer", "@backend-developer", "@devops-engineer"],
      "new_feature": ["@solution-architect", "@backend-developer", "@frontend-developer", "@quality-engineer"],
      "documentation": ["@documentation-manager"],
      "deployment": ["@devops-engineer", "@quality-engineer"],
      "security_audit": ["@security-engineer", "@quality-engineer"]
    }
  },
  "learning": {
    "enabled": true,
    "feedback_collection": true,
    "pattern_recognition": true,
    "success_metrics": [
      "task_completion",
      "agent_efficiency",
      "user_satisfaction"
    ]
  }
}